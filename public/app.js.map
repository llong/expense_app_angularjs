{"version":3,"sources":["app/initialize.js","app/js/app.js","app/js/controllers.js","app/js/demoData.js","app/js/factories.js","app/js/filters.js","app/js/routes.js"],"names":["document","addEventListener","console","log","app","angular","module","config","filter","factory","controller","mainCtrl","$scope","expensesFactory","auth","expenses","getExpenses","addExpense","expenseDetail","logout","sortType","sortReverse","expenseCtrl","$routeParams","expense","id","updateExpense","editing","editMode","editText","removeExpense","loginCtrl","$location","loginfail","login","user","localStorage","setItem","JSON","stringify","parse","getItem","loginCred","password","username","path","loginFail","merchant","amount","date","Date","comments","status","Math","random","toString","substring","push","i","splice","userCred","removeItem","blankComment","value","capitalize","input","all","reg","replace","txt","charAt","toUpperCase","substr","toLowerCase","routes","$routeProvider","$locationProvider","when","templateUrl","otherwise","redirectTo"],"mappings":"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","file":"public/app.js","sourcesContent":["import angular from 'angular/angular'\nimport ngRoute from 'angular-route'\nimport app from './js/app'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // do your setup here\n  console.log('Initialized app');\n});\n","import { routes } from './routes'\nimport { blankComment, capitalize } from './filters'\nimport { expensesFactory } from './factories'\nimport { mainCtrl, expenseCtrl, loginCtrl } from './controllers'\n\nconst app = angular.module('app', ['ngRoute'])\n\n// Setup Routing\napp.config(routes)\n\n// Setup Filters\napp.filter('blankComment', blankComment)\napp.filter('capitalize', capitalize)\n\n// Setup Factories\napp.factory('expensesFactory', expensesFactory)\n\n// Main Controller for expenses\napp.controller('mainCtrl', mainCtrl)\napp.controller('expenseCtrl', expenseCtrl)\napp.controller('loginCtrl', loginCtrl)\n\nexport default app;\n","/******************************************************************************************\n mainCtrl is used to keep the state of the expenses and used as a parent controller\n for expenseCtrl\n******************************************************************************************/\nexport const mainCtrl = function($scope,expensesFactory) {\n  expensesFactory.auth();\n  //Comment out $scope.expenses on line 8 to remove demoData\n  $scope.expenses = expensesFactory.getExpenses();\n  $scope.addExpense = expensesFactory.addExpense;\n  $scope.expenseDetail = expensesFactory.expenseDetail;\n  $scope.logout = expensesFactory.logout;\n\n  // Table Sorting\n  $scope.sortType = 'merchant';\n  $scope.sortReverse = false;\n}\n\n/******************************************************************************************\n expenseCtrl is used to find a single expense account and edit it.\n*******************************************************************************************/\nexport const expenseCtrl = function($scope,$routeParams,expensesFactory) {\n  const expenses = expensesFactory.getExpenses();\n  const expense = expenses.filter(expense => expense.id === $routeParams.id);\n\n  // Controller State\n  $scope.updateExpense = expensesFactory.updateExpense;\n  $scope.editing = false;\n  $scope.expense = expense[0];\n  $scope.editMode = expensesFactory.editMode;\n  $scope.editText = 'Edit expense';\n  $scope.removeExpense = expensesFactory.removeExpense;\n}\n\n\n/******************************************************************************************\n LoginCtrl is used for simple clientside authentication\n******************************************************************************************/\nexport const loginCtrl = function($scope,$location) {\n  $scope.loginfail = null;\n\n  $scope.login = function(user) {\n    console.log($scope.user)\n    localStorage.setItem(\"user\", JSON.stringify($scope.user))\n    console.log(JSON.parse(localStorage.getItem(\"user\")))\n    let loginCred = JSON.parse(localStorage.getItem(\"user\"))\n\n    if(loginCred.password === \"demo\" && loginCred.username === \"demo\") {\n      console.log('sucesss')\n      $location.path('/')\n    } else {\n      console.log('wrong')\n      $scope.loginFail = true;\n    }\n  }\n}\n","export const expenses = [\n  {\n    id: 'dkjfldkfj349dk',\n    merchant: 'Google',\n    amount: 5000,\n    date: new Date,\n    comments: '',\n    status: 'new',\n  },\n  {\n    id: 'rirkdo3di3d',\n    merchant: 'Microsoft',\n    amount: 2000,\n    date: new Date,\n    comments: '',\n    status: 'new'\n  },\n  {\n    id: 'dmeidk39dk3',\n    merchant: 'Amazon',\n    amount: 1500,\n    date: new Date,\n    comments: '',\n    status: 'reimbursed'\n  },\n  {\n    id: 'cmeod04dk2ws',\n    merchant: 'Apptricity',\n    amount: 9000,\n    date: new Date,\n    comments: 'cool studlfjdlkfjdlksfjlkdsjflkdsjfdslkfjdlskfff',\n    status: 'reimbursed'\n  }\n]\n","import {expenses} from './demoData';\n\nexport const expensesFactory = function($location,$routeParams) {\n  return {\n    getExpenses: () => {\n      return expenses\n    },\n    addExpense: function(expense) {\n      expense.id = (((1+Math.random())*0x10000)|0).toString(16).substring(1)\n      expense.status = 'new'\n      this.expenses.push(expense)\n      $location.path('/')\n    },\n    expenseDetail: function(id) {\n      $location.path(`/expense/${id}`)\n    },\n    editMode: function() {\n      if(!this.editing) {\n        this.editing = true\n      } else {\n        this.editing = false\n      }\n    },\n    updateExpense: function(expense) {\n      for(var i in this.expenses) {\n        if(expenses[i].id === $routeParams.id) {\n          expenses[i] = expense;\n          this.editing = false;\n        }\n      }\n    },\n    removeExpense: function(expense) {\n      for(var i in this.expenses) {\n        if(expenses[i].id === $routeParams.id) {\n          let merchant = expenses[i].merchant\n          console.log(merchant, ' was removed')\n          this.expenses.splice(i,1)\n          $location.path('/')\n        }\n      }\n    },\n    auth: function() {\n      let userCred = JSON.parse(localStorage.getItem(\"user\")) || {};\n      if(userCred.username === \"demo\" && userCred.password === \"demo\"){\n        console.log('sucessfully logged in')\n      } else {\n        $location.path('/login')\n      }\n    },\n    logout: function() {\n      localStorage.removeItem(\"user\")\n      $location.path('/login');\n    }\n  }\n}\n","export const blankComment = () => {\n  return (value) => {\n    return value === '' ? 'No comments' : value\n  }\n}\n\nexport const capitalize = function() {\n    return function(input, all) {\n      var reg = (all) ? /([^\\W_]+[^\\s-]*) */g : /([^\\W_]+[^\\s-]*)/;\n      return (!!input) ? input.replace(reg, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}) : '';\n    }\n  }\n","export const routes = ($routeProvider,$locationProvider) => {\n  $routeProvider\n    .when('/', {\n      templateUrl: '../partials/home.html',\n      controller: 'mainCtrl'\n    })\n    .when('/login', {\n      templateUrl: '../partials/login.html',\n      controller: 'loginCtrl'\n    })\n    .when('/expense/:id', {\n      templateUrl: '../partials/expense.html',\n      controller: 'mainCtrl'\n    })\n    .when('/new-expense', {\n      templateUrl: '../partials/new-expense.html',\n      controller: 'mainCtrl'\n    })\n    .otherwise({redirectTo:'/'})\n\n    // Pretty URLs\n    //$locationProvider.html5Mode({enabled:true})\n}\n"]}